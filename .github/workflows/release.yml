on:
  release:
    types:
    - published
name: Build Release
jobs:
  release-assests:
    name: release kubectl-karmada
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
    steps:
    - uses: actions/checkout@master
      with:
        # we might need history and tag info for `git describe --tags` in Makefile, especially when publishing
        fetch-depth: 0
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: Making kubectl-karmada
      run: make kubectl-karmada
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        VERSION: ${{ github.ref_name }}
    - name: Packaging...
      run: tar czf kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz kubectl-karmada LICENSE
    - name: Uploading assets...
      if: ${{ !env.ACT }}
      uses: softprops/action-gh-release@v1
      with:
        files: ./kubectl-karmada-${{ matrix.goos }}-${{ matrix.goarch }}.tgz
#  update-krew-index:
#    needs: release-assests
#    name: Update krew-index
#    runs-on: ubuntu-18.04
#    steps:
#    - uses: actions/checkout@master
#    - name: Update new version in krew-index
#      uses: rajatjindal/krew-release-bot@v0.0.40
  publish-image:
    name: publish images
    # prevent job running from forked repository, otherwise
    # 1. running on the forked repository would fail as missing necessary secret.
    # 2. running on the forked repository would use unnecessary GitHub Action time.
#    if: ${{ github.repository == 'karmada-io/karmada' }}
    runs-on: ubuntu-18.04
    steps:
    - name: checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16.x
    - name: build images
      env:
        REGISTRY: ${{secrets.SWR_REGISTRY}}
        REGISTRY_USER_NAME: ${{secrets.SWR_REGISTRY_USER_NAME}}
        REGISTRY_PASSWORD: ${{secrets.SWR_REGISTRY_PASSWORD}}
        REGISTRY_SERVER_ADDRESS: ${{secrets.SWR_REGISTRY_SERVER_ADDRESS}}
        VERSION: ${{ github.ref_name }}
      run: make upload-images
